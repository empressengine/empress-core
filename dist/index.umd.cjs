(function(r,m){typeof exports=="object"&&typeof module<"u"?m(exports):typeof define=="function"&&define.amd?define(["exports"],m):(r=typeof globalThis<"u"?globalThis:r||self,m(r.EmpressCore={}))})(this,function(r){"use strict";class m{constructor(){this._groupId="",this._executionId="",this.withDisabled=!1}get groupId(){return this._groupId}get executionId(){return this._executionId}setContext(e,t,s){this._groupId=e,this._executionId=t,this._entityStorage=s}run(e,t,s){return this.externalFilter=t,this.withDisabled=s,this.execute(e)}filter(e){const t={includes:[...e.includes,...this.externalFilter.includes||[]],excludes:[...e.excludes||[],...this.externalFilter.excludes||[]]};return this._entityStorage.filter(t,this.withDisabled)}cleanFilter(e){return this._entityStorage.filter(e,this.withDisabled)}forceStop(){}}const y=class y{static uuid(){const e=Date.now();e!==this.lastTime&&(this.counter=0,this.lastTime=e);const t=(this.counter++).toString(36).padStart(2,"0"),s=Math.random().toString(36).slice(2,6);return`${e.toString(36)}-${t}-${s}`}static debounce(e,t=0){let s=null;return(...i)=>{clearTimeout(s),s=setTimeout(()=>{e(...i)},t)}}static createProxyDecorator(e){return new Proxy(e,{get:(t,s)=>{const i=t[s];return i instanceof Object?new Proxy(i,{}):i},set:()=>(console.warn("Direct state mutation is not allowed. Use setState instead."),!1)})}};y.counter=0,y.lastTime=0;let d=y;class x{constructor(){this._uuid=d.uuid()}get uuid(){return this._uuid}sorted(e){const t=this.setup(e),s=1e4;return t.forEach((i,n)=>{i.withDisabled===void 0&&(i.withDisabled=!1),i.includes===void 0&&(i.includes=[]),i.excludes===void 0&&(i.excludes=[]),i.repeat||(i.repeat=1),i.canExecute||(i.canExecute=()=>!0),i.order===void 0&&(i.order=(n+1)*s)}),t.sort((i,n)=>(i.order||0)-(n.order||0))}registerGroupDependencies(){const e=this.setupDependencies();u.instance.registerModule(this.uuid,e)}provide(e,t){return{system:e,data:t}}setupDependencies(){return[]}}class u{constructor(){this.providers=new Map,this.instances=new Map,this.systemTokens=[],this.providers.set("global",new Map),this.instances.set("global",new Map)}static get instance(){return u._instance||(u._instance=new u),u._instance}registerModule(e,t){this.providers.has(e)||(this.providers.set(e,new Map),this.instances.set(e,new Map));const s=this.providers.get(e);for(const i of t)s.set(i.provide,i)}registerGlobal(e){this.registerModule("global",e)}get(e,t="global"){var a;let s=((a=this.providers.get(t))==null?void 0:a.get(e))??this.providers.get("global").get(e);if(!s)throw new Error(`Provider for token ${e.toString()} not found`);const i=this.instances.get(t==="global"?"global":t);if(i.has(e))return i.get(e);const n="useClass"in s?typeof s.useClass=="function"?new s.useClass:s.useClass:s.useFactory();return i.set(e,n),n}memorizeSystem(e,t,s){this.systemTokens.push({system:e,token:t,key:s})}getDependencyForSystem(e,t){if(!("injectHere"in t))return;const s=[];for(const i of this.systemTokens)t instanceof i.system&&s.push({token:i.token,key:i.key});s.forEach(i=>{var n;if(i.key in t){const a=((n=this.providers.get(e))==null?void 0:n.get(i.token))??this.providers.get("global").get(i.token);if(!a)return;let l=this.get(i.token,e);a.immutable&&(l=new Proxy(l,{get:(h,S)=>{const p=h[S];return p instanceof Object?new Proxy(p,{}):p},set:()=>(console.warn("Direct state mutation is not allowed. Use setState instead."),!1)})),Object.defineProperty(t,i.key,{value:l,enumerable:!0,configurable:!0})}})}}function A(o){if(!o)throw new Error("Token must be provided to @Inject decorator when not using reflect-metadata");return function(e,t){let s="global";if(e instanceof m){Object.defineProperty(e,"injectHere",{value:"injectHere",enumerable:!1,configurable:!1}),Object.defineProperty(e,t,{value:null}),u.instance.memorizeSystem(e.constructor,o,t);return}e instanceof x&&(s=e.uuid||"global"),Object.defineProperty(e,t,{get:()=>u.instance.get(o,s),enumerable:!0,configurable:!1})}}class b{constructor(){this._cache=new Map}get(e){let t=this._cache.get(e);return t||(t=new e,this._cache.set(e,t)),t}}const D=(o,e)=>t=>!(!t.hasComponents(o)||e&&t.hasComponents(e));class q{constructor(e=[]){this._entities=e}get count(){return this._entities.length}get items(){return this._entities}forEach(e){for(let t=0;t<this._entities.length;t++)e(this._entities[t],t)}async sequential(e){let t=0;for(const s of this._entities)await e(s,t),t+=1}async parallel(e){const t=this._entities.map(e);await Promise.all(t)}}const E=class E{static increment(e){const t=this._componentFrequency.get(e)??0;this._componentFrequency.set(e,t+1)}static decrement(e){const t=this._componentFrequency.get(e)??0;t>1?this._componentFrequency.set(e,t-1):this._componentFrequency.delete(e)}static rarity(e){return this._componentFrequency.get(e)??0}static sortByRarity(e){return[...e].sort((t,s)=>this.rarity(t)-this.rarity(s))}};E._componentFrequency=new Map;let c=E;class w{constructor(){this._entities=new Map}addEntity(e){const{uuid:t,name:s}=e;if(this._entities.has(t))throw new Error(`Entity with UUID [${s}-${t}] already exists in the storage.`);this._entities.set(t,e)}removeEntity(e){const t=this._entities.get(e);if(t)return this._entities.delete(e),t}getEntity(e){return this._entities.get(e)}getAllEntities(){return Array.from(this._entities.values())}getActiveEntities(){return Array.from(this._entities.values()).filter(e=>e.active)}getInactiveEntities(){return Array.from(this._entities.values()).filter(e=>!e.active)}filter(e,t){let s=t?this.getAllEntities():this.getActiveEntities();if(e.excludes||(e.excludes=[]),e!=null&&e.includes.length||e!=null&&e.excludes.length){const i=c.sortByRarity(e.includes),n=e.excludes.length?c.sortByRarity(e.excludes):void 0,a=D(i,n);s=s.filter(a)}return new q(s)}}class ${constructor(e,t,s,i){this._id=e,this._systemsContainer=t,this._entityStorage=s,this._name=i,this._queue=[],this._currentSystem=null,this._isPaused=!1,this._resumePromise=null,this._resolveResume=null,this._abortController=null}get id(){return this._id}get name(){return this._name}setup(e,t){this._queue=this.getExecutionQueue(e,t)}async execute(e=!0){this._abortController=new AbortController;try{for(;this._queue.length>0&&(this._isPaused&&await this.waitForResume(),!this._abortController.signal.aborted);){const t=this._queue.shift();if(t&&t.canExecute()){const i={includes:t.includes,excludes:t.excludes};t.system.setContext(t.groupId,t.executionId,this._entityStorage),u.instance.getDependencyForSystem(t.groupId,t.system),this._currentSystem=t.system;const n=t.system.run(t.data,i,t.withDisabled);if(n instanceof Promise)if(e)await Promise.race([n,new Promise((a,l)=>{this._abortController.signal.addEventListener("abort",()=>{l(new Error("Queue execution was stopped"))})})]);else throw new Error(`Execution of asynchronous system '${t.system.constructor.name}' in queue '${this.name}' is prohibited!`);this._currentSystem=null}}}catch(t){if(t instanceof Error&&t.message==="Queue execution was stopped")return;throw t}}stop(){var e;this._queue=[],(e=this._currentSystem)==null||e.forceStop(),this._abortController&&(this._abortController.abort(),this._abortController=null)}pause(){this._isPaused||(this._isPaused=!0)}resume(){this._isPaused&&(this._isPaused=!1,this._resolveResume&&(this._resolveResume(),this._resolveResume=null,this._resumePromise=null))}waitForResume(){return this._resumePromise||(this._resumePromise=new Promise(e=>{this._resolveResume=e})),this._resumePromise}getExecutionQueue(e,t){const s=e.map(n=>{const a=new n;return a.registerGroupDependencies(),a}),i=[];return s.forEach(n=>{const a=n.sorted(t),l=n.uuid;a.forEach(h=>{const S=this._systemsContainer.get(h.instance.system);for(let p=0;p<h.repeat;p++)i.push({...h,groupId:l,data:h.instance.data,executionId:this._id,system:S})})}),i}}class C{constructor(e,t){this._systemsContainer=e,this._entityStorage=t,this._queues=new Map}get activeQueues(){return Array.from(this._queues.keys())}get queueSize(){return this._queues.size}create(e,t,s="unnamed"){const i=new $(d.uuid(),this._systemsContainer,this._entityStorage,s);return i.setup(e,t),this._queues.set(i.id,i),i.id}async run(e,t=!0){const s=this._queues.get(e);if(!s)throw new Error(`Queue with id ${e} not found`);await s.execute(t),this._queues.delete(s.id)}stop(e){const t=this._queues.get(e);t&&(t.stop(),this._queues.delete(e))}pause(e){const t=this._queues.get(e);t&&t.pause()}resume(e){const t=this._queues.get(e);t&&t.resume()}stopAll(){this._queues.forEach(e=>{e.stop()}),this._queues.clear()}pauseAll(){this._queues.forEach(e=>{e.pause()})}resumeAll(){this._queues.forEach(e=>{e.resume()})}hasQueue(e){return this._queues.has(e)}getQueueStatus(e){const t=this._queues.get(e);return t?{isPaused:t._isPaused}:null}}class f{constructor(e){this._executionController=e,this._pairs=new Map,this._disposables=[],this._executionIds=[]}setup(e){for(let t of e){const s=this._pairs.get(t.signal)||[];s.push(...t.groups),this._pairs.set(t.signal,s)}}subscribe(){const e=Array.from(this._pairs.keys()),t=Array.from(this._pairs.values());for(let s=0;s<e.length;s++){const i=e[s],n=t[s],a=i.subscribe(l=>{const h=this._executionController.create(n,l,i.name);this._executionController.run(h),this._executionIds.push(h)});this._disposables.push(a)}}unsubscribe(){this._disposables.forEach(e=>e.dispose()),this._disposables.length=0,this._executionIds.forEach(e=>this._executionController.stop(e)),this._executionIds.length=0}}class I{constructor(e,t,s,i){this._uuid=e,this._timerController=t,this._onComplete=s,this._duration=i,this._elapsedTime=0}get uuid(){return this._uuid}update(e){this._elapsedTime+=e*1e3,this._elapsedTime>=this._duration&&(this._onComplete(),this._timerController.clear(this.uuid))}}class j{constructor(e,t,s){this._uuid=e,this._onComplete=t,this._duration=s,this._elapsedTime=0}get uuid(){return this._uuid}onComplete(){return this._onComplete}update(e){this._elapsedTime+=e*1e3,this._elapsedTime>=this._duration&&(this._elapsedTime=0,this._onComplete())}}class P{constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}static resolveAll(e,t){e.forEach(s=>s.resolve(t))}static rejectAll(e,t){e.forEach(s=>s.reject(t))}static all(e){return Promise.all(e.map(t=>t.promise))}static allSettled(e){return Promise.allSettled(e.map(t=>t.promise))}static race(e){return Promise.race(e.map(t=>t.promise))}}class g{constructor(){this._updatables=new Map}setTimeout(e,t){const s=d.uuid(),i=new I(s,this,e,t);return this._updatables.set(s,i),s}setInterval(e,t){const s=d.uuid(),i=new j(s,e,t);return this._updatables.set(s,i),s}sleep(e){const t=new P,s=this.setTimeout(()=>t.resolve(),e);return{id:s,wait:async()=>await t.promise,resolve:()=>{t.resolve(),this.clear(s)}}}clear(e){this._updatables.has(e)&&this._updatables.delete(e)}update(e){Array.from(this._updatables.values()).forEach(s=>s.update(e))}}class v{constructor(e="Signal"){this._name=e,this.listeners=[],this._uuid=d.uuid()}get name(){return this._name}get uuid(){return this._uuid}subscribe(e){return this.listeners.push({callback:e,once:!1}),{dispose:()=>{this.unsubscribe(e)}}}once(e){return this.listeners.push({callback:e,once:!0}),{dispose:()=>{this.unsubscribe(e)}}}unsubscribe(e){this.listeners=this.listeners.filter(t=>t.callback!==e)}async dispatch(e){const t=[],s=[];for(const i of this.listeners){const n=i.callback(e);n instanceof Promise&&s.push(n),i.once&&t.push(i.callback)}await Promise.all(s),t.length>0&&(this.listeners=this.listeners.filter(i=>!t.includes(i.callback)))}}const F=new v,T=new v;class _{constructor(){this._lastTime=0,this._paused=!1,this._speedMultiplier=1,this._onUpdate=[],this._onStart=[],this.animate=e=>{if(!this._paused){if(this._lastTime!==0){const t=(e-this._lastTime)/1e3;this.update(t)}this._lastTime=e,requestAnimationFrame(this.animate)}}}start(){this._onStart.forEach(e=>e()),F.dispatch(),requestAnimationFrame(this.animate)}addStartCallback(e){this._onStart.push(e)}addUpdateCallback(e){this._onUpdate.push(e)}removeUpdateCallback(e){this._onUpdate=this._onUpdate.filter(t=>t!==e)}pause(e){this._paused=e}setSpeedMultiplier(e){this._speedMultiplier=e}update(e){if(this._paused)return;const t=e*this._speedMultiplier;this._onUpdate.forEach(s=>s(t)),T.dispatch({deltaTime:e,speedMultiplier:this._speedMultiplier,multipliedDelta:t})}}class k{init(){this.registerServices();const e=u.instance.get(_),t=u.instance.get(g);e.addUpdateCallback(s=>{t.update(s)})}start(){u.instance.get(_).start()}listen(e){const t=u.instance.get(f);t.setup(e),t.subscribe()}registerGlobalServices(e){u.instance.registerGlobal(e)}registerServices(){const e=new w,t=new b,s=new _,i=new g,n=new C(t,e),a=new f(n);this.registerGlobalServices([{provide:w,useFactory:()=>e},{provide:b,useFactory:()=>t},{provide:_,useFactory:()=>s},{provide:g,useFactory:()=>i},{provide:C,useFactory:()=>n},{provide:f,useFactory:()=>a}])}}class M{constructor(){this._items=[]}get items(){return this._items}set(e){this._items.push(e)}get(e){return this._items.find(t=>t instanceof e)}has(e){return!!this.get(e)}delete(e){const t=this.get(e);return t&&(this._items=this.items.filter(s=>s.constructor!==e)),!!t}clear(){this._items.length=0}}class U{constructor(e,t="Entity"){this._uuid=e,this._name=t,this._active=!0,this._components=new M,this._disabledComponents=new M}get uuid(){return this._uuid}get name(){return this._name}set name(e){this._name=e}get active(){return this._active}set active(e){this._active=e}get components(){return this._components.items}get disabledComponents(){return this._disabledComponents.items}addComponent(e,t=!0){const s=this.extractConstructor(e);if(this._components.has(s)||this._disabledComponents.has(s))throw new Error(`Component of type ${s.name} already exists in entity [${this._name}-${this._uuid}]`);t?(this._components.set(e),c.increment(s)):(this._disabledComponents.set(e),c.decrement(s))}getComponent(e){const t=this._components.get(e);if(!t)throw new Error(`Component of type ${e.name} is not found in [${this.name}-${this.uuid}].`);return t}hasComponents(e){return e.every(t=>!!this._components.get(t))}removeComponent(e){let t;if(this._components.has(e)?(t=this._components.get(e),this._components.delete(e)):this._disabledComponents.has(e)&&(t=this._disabledComponents.get(e),this._disabledComponents.delete(e)),!t)throw new Error(`Component type ${e.name} does not exist in entity [${this._name}-${this._uuid}]`);return c.decrement(e),t}enableComponent(e){if(!this._disabledComponents.has(e))throw new Error(`Cannot enable component of type ${e.name} - it does not exist or is already enabled.`);const t=this._disabledComponents.get(e);this._disabledComponents.delete(e),this._components.set(t),c.increment(e)}disableComponent(e){if(!this._components.has(e))throw new Error(`Cannot disable component of type ${e.name} - it does not exist or is already disabled.`);const t=this._components.get(e);this._components.delete(e),this._disabledComponents.set(t),c.decrement(e)}disableAllComponents(){for(const e of this._components.items)this._disabledComponents.set(e),c.decrement(e.constructor);this._components.clear()}enableAllComponents(){for(const e of this._disabledComponents.items)this._components.set(e),c.increment(e.constructor);this._disabledComponents.clear()}isSatisfiedFilter(e){const t=e.includes||[],s=e.excludes||[];return this.hasComponents(t)&&(!s.length||!this.hasComponents(s))}extractConstructor(e){return e.constructor}}r.ComponentsRaritySorter=c,r.DeferredPromise=P,r.EmpressCore=k,r.Entity=U,r.EntityStorage=w,r.ExecutionController=C,r.Filtered=q,r.Inject=A,r.LifeCycle=_,r.OnStartSignal=F,r.OnUpdateSignal=T,r.ServiceContainer=u,r.Signal=v,r.SignalsController=f,r.System=m,r.SystemGroup=x,r.SystemsContainer=b,r.TimerController=g,r.Utils=d,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});
